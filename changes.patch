diff --git a/.gitignore b/.gitignore
index aa724b7..d663d7f 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,15 +1,14 @@
+# Gradle files
+.gradle/
+build/
+local.properties
+.idea/
+
+# Native build
+.cxx/
+.externalNativeBuild/
+
+# Android Studio
 *.iml
-.gradle
-/local.properties
-/.idea/caches
-/.idea/libraries
-/.idea/modules.xml
-/.idea/workspace.xml
-/.idea/navEditor.xml
-/.idea/assetWizardSettings.xml
 .DS_Store
-/build
-/captures
-.externalNativeBuild
-.cxx
-local.properties
+/captures/
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
index 160e7da..3deeb23 100644
--- a/app/build.gradle.kts
+++ b/app/build.gradle.kts
@@ -45,4 +45,7 @@ dependencies {
     testImplementation(libs.junit)
     androidTestImplementation(libs.androidx.junit)
     androidTestImplementation(libs.androidx.espresso.core)
+
+    implementation ("com.amazonaws:aws-android-sdk-s3:2.79.0")
+
 }
\ No newline at end of file
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 590f9ce..60fcdda 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -2,6 +2,8 @@
     xmlns:tools="http://schemas.android.com/tools"
     package="com.example.androidlab2">
 
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
     <uses-permission android:name="android.permission.RECORD_AUDIO" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
diff --git a/app/src/main/java/com/example/androidlab2/PronunciationActivity.kt b/app/src/main/java/com/example/androidlab2/PronunciationActivity.kt
index ca57be5..c70ff2a 100644
--- a/app/src/main/java/com/example/androidlab2/PronunciationActivity.kt
+++ b/app/src/main/java/com/example/androidlab2/PronunciationActivity.kt
@@ -1,17 +1,22 @@
-package com.example.androidlab2  // 패키지명 맞추기
+package com.example.androidlab2
 
 import android.Manifest
 import android.content.Intent
 import android.content.pm.PackageManager
 import android.media.MediaRecorder
 import android.os.Bundle
+import android.util.Log
 import android.widget.ImageButton
 import android.widget.TextView
 import android.widget.Button
+import android.widget.Toast
 import androidx.appcompat.app.AppCompatActivity
-import androidx.collection.emptyLongSet
 import androidx.core.app.ActivityCompat
 import androidx.core.content.ContextCompat
+import com.amazonaws.auth.BasicAWSCredentials
+import com.amazonaws.mobileconnectors.s3.transferutility.*
+import com.amazonaws.regions.Regions
+import com.amazonaws.services.s3.AmazonS3Client
 import java.io.File
 import java.io.IOException
 import java.text.SimpleDateFormat
@@ -24,7 +29,7 @@ class PronunciationActivity : AppCompatActivity() {
     private lateinit var recordingsListButton: Button
     private var isRecording = false
     private var mediaRecorder: MediaRecorder? = null
-    private lateinit var outputFile: String  // 녹음 파일 경로 변수
+    private lateinit var outputFile: String
 
     private val RECORD_AUDIO_PERMISSION_CODE = 100
     private val WRITE_STORAGE_PERMISSION_CODE = 101
@@ -58,11 +63,9 @@ class PronunciationActivity : AppCompatActivity() {
 
     // 권한 체크 및 요청
     private fun checkPermissions() {
-        // 권한이 없으면 요청
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO) != PackageManager.PERMISSION_GRANTED) {
             ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.RECORD_AUDIO), RECORD_AUDIO_PERMISSION_CODE)
         } else {
-            // 권한이 이미 승인되었으면 첫 화면 상태 설정
             recordingInstruction.text = "마이크 버튼을 클릭하여 발음을 녹음하세요."
         }
 
@@ -76,10 +79,8 @@ class PronunciationActivity : AppCompatActivity() {
         super.onRequestPermissionsResult(requestCode, permissions, grantResults)
         if (requestCode == RECORD_AUDIO_PERMISSION_CODE || requestCode == WRITE_STORAGE_PERMISSION_CODE) {
             if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
-                // 권한이 승인되었을 때 첫 화면 상태 설정
                 recordingInstruction.text = "마이크 버튼을 클릭하여 발음을 녹음하세요."
             } else {
-                // 권한이 거부되었을 때 처리할 로직
                 recordingInstruction.text = "마이크 버튼을 클릭하여 발음을 녹음하세요."
             }
         }
@@ -88,54 +89,101 @@ class PronunciationActivity : AppCompatActivity() {
     // 녹음 시작
     private fun startRecording() {
         try {
-            // 파일 경로 설정 (앱 전용 외부 저장소에 "Recordings" 폴더 만들기)
             val dir = File(getExternalFilesDir(null), "Recordings")  // 앱 외부 저장소의 "Recordings" 폴더
             if (!dir.exists()) {
-                dir.mkdirs()  // 폴더가 없으면 생성
+                dir.mkdirs()
             }
-
-            // 현재 시간으로 파일명을 설정 (녹음 시작 시간 기준)
             val currentTime = SimpleDateFormat("yyyy-MM-dd_HH-mm-ss", Locale.getDefault()).format(Date())
-            outputFile = "${dir.absolutePath}/recording_$currentTime.3gp"  // 파일명에 날짜 및 시간 추가
+            outputFile = "${dir.absolutePath}/recording_$currentTime.3gp"
 
-            // MediaRecorder 설정
             mediaRecorder = MediaRecorder().apply {
-                setAudioSource(MediaRecorder.AudioSource.MIC)  // 마이크에서 오디오 입력
-                setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP)  // 파일 포맷 설정
-                setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB)  // 오디오 인코딩 설정
-                setOutputFile(outputFile)  // 저장할 파일 경로 지정
-                prepare()  // 초기화
-                start()  // 녹음 시작
+                setAudioSource(MediaRecorder.AudioSource.MIC)
+                setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP)
+                setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB)
+                setOutputFile(outputFile)
+                prepare()
+                start()
             }
 
             // UI 업데이트
             isRecording = true
-            micButton.setImageResource(R.drawable.ic_btn_speak_now)  // 녹음 중 아이콘 변경
-            recordingInstruction.text = "녹음 중입니다."  // 안내 문구 변경
+            micButton.setImageResource(R.drawable.ic_btn_speak_now)
+            recordingInstruction.text = "녹음 중입니다."
 
         } catch (e: IOException) {
             e.printStackTrace()
-            recordingInstruction.text = "녹음 시작 오류가 발생했습니다."  // 오류 처리
+            recordingInstruction.text = "녹음 시작 오류가 발생했습니다."
         }
     }
 
-    // 녹음 멈추기
+    // 녹음 중지
     private fun stopRecording() {
         try {
             mediaRecorder?.apply {
-                stop()  // 녹음 종료
-                release()  // 리소스 해제
+                stop()
+                release()
             }
-            mediaRecorder = null  // 객체 초기화
+            mediaRecorder = null
 
             // UI 업데이트
             isRecording = false
-            micButton.setImageResource(R.drawable.ic_voice)  // 원래의 마이크 아이콘으로 되돌리기
-            recordingInstruction.text = "마이크 버튼을 클릭하여 발음을 녹음하세요."  // 원래 문구로 변경
+            micButton.setImageResource(R.drawable.ic_voice)
+            recordingInstruction.text = "마이크 버튼을 클릭하여 발음을 녹음하세요."
+
+            uploadFileToS3()
+
+        } catch (e: Exception) {
+            e.printStackTrace()
+            recordingInstruction.text = "녹음 중 오류가 발생했습니다."
+        }
+    }
 
+    // S3에 녹음 파일 업로드
+    private fun uploadFileToS3() {
+        try {
+            // val awsAccessKey =
+            // val awsSecretKey =
+
+            val credentials = BasicAWSCredentials(awsAccessKey, awsSecretKey)
+            val s3Client = AmazonS3Client(credentials)
+            s3Client.setRegion(com.amazonaws.regions.Region.getRegion(Regions.AP_NORTHEAST_2))
+
+            val transferUtility = TransferUtility.builder()
+                .context(applicationContext)
+                .s3Client(s3Client)
+                .defaultBucket("app-request-bucket")
+                .build()
+
+            val file = File(outputFile)
+            val key = file.name
+
+            val uploadObserver = transferUtility.upload(key, file)
+
+            uploadObserver.setTransferListener(object : TransferListener {
+                override fun onStateChanged(id: Int, state: TransferState?) {
+                    if (state == TransferState.COMPLETED) {
+                        Log.d("AWS", "업로드 완료: $key")
+                        Toast.makeText(applicationContext, "업로드 완료", Toast.LENGTH_SHORT).show()
+                    } else if (state == TransferState.FAILED) {
+                        Log.e("AWS", "업로드 실패")
+                        Toast.makeText(applicationContext, "업로드 실패", Toast.LENGTH_SHORT).show()
+                    }
+                }
+
+                override fun onProgressChanged(id: Int, bytesCurrent: Long, bytesTotal: Long) {
+                    val percentDone = (bytesCurrent.toDouble() / bytesTotal * 100).toInt()
+                    Log.d("AWS", "진행률: $percentDone%")
+                }
+
+                override fun onError(id: Int, ex: Exception?) {
+                    ex?.printStackTrace()
+                    Toast.makeText(applicationContext, "에러 발생: ${ex?.message}", Toast.LENGTH_SHORT).show()
+                }
+            })
         } catch (e: Exception) {
             e.printStackTrace()
-            recordingInstruction.text = "녹음 중 오류가 발생했습니다."  // 오류 발생 시 안내 문구
+            Toast.makeText(applicationContext, "예외 발생: ${e.message}", Toast.LENGTH_LONG).show()
         }
     }
-}
\ No newline at end of file
+
+}
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
index d5bb25d..e120681 100644
--- a/gradle/libs.versions.toml
+++ b/gradle/libs.versions.toml
@@ -23,4 +23,3 @@ androidx-constraintlayout = { group = "androidx.constraintlayout", name = "const
 [plugins]
 android-application = { id = "com.android.application", version.ref = "agp" }
 kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
-
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 84cd83a..889abe3 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,4 +1,4 @@
-#Sat Apr 05 17:24:56 KST 2025
+# Sat Apr 05 17:24:56 KST 2025
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 distributionUrl=https\://services.gradle.org/distributions/gradle-8.9-bin.zip
diff --git a/settings.gradle.kts b/settings.gradle.kts
index e789115..361081d 100644
--- a/settings.gradle.kts
+++ b/settings.gradle.kts
@@ -11,6 +11,7 @@ pluginManagement {
         gradlePluginPortal()
     }
 }
+
 dependencyResolutionManagement {
     repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
     repositories {
@@ -21,4 +22,3 @@ dependencyResolutionManagement {
 
 rootProject.name = "AndroidLab2"
 include(":app")
- 
\ No newline at end of file
